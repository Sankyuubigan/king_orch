# run.py

import subprocess
import sys
import time
import logging
import threading
import webview
import os

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
APP_FILE = "app.py"
STREAMLIT_URL = "http://localhost:8501"

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - [run.py] - %(message)s')
logger = logging.getLogger(__name__)

def run_streamlit():
    """–ü—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç Streamlit. –í—Å—è –ª–æ–≥–∏–∫–∞ –ª–æ–≥–æ–≤ —Ç–µ–ø–µ—Ä—å –≤–Ω—É—Ç—Ä–∏ app.py."""
    command = [sys.executable, "-m", "streamlit", "run", APP_FILE, "--server.headless", "true"]
    # –ú—ã —Å–Ω–æ–≤–∞ "–≥–ª—É—à–∏–º" –≤—ã–≤–æ–¥, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –Ω–∞–º –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, –≤—Å–µ –ª–æ–≥–∏ –±—É–¥—É—Ç –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.
    subprocess.run(command, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

# --- –ì–õ–ê–í–ù–´–ô –ë–õ–û–ö ---
if __name__ == '__main__':
    try:
        streamlit_thread = threading.Thread(target=run_streamlit, daemon=True)
        streamlit_thread.start()
        logger.info("–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Streamlit (5 —Å–µ–∫—É–Ω–¥)...")
        time.sleep(5)

        if not streamlit_thread.is_alive():
            logger.error("–ü–æ—Ç–æ–∫ Streamlit –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è. –≠—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏.")
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            sys.exit(1)

        window = webview.create_window("The Orchestrator üé≠", STREAMLIT_URL, width=1200, height=800)
        
        def on_loaded():
            window.evaluate_js("""
                const style = document.createElement('style');
                style.innerHTML = `* { user-select: text !important; -webkit-user-select: text !important; }`;
                document.head.appendChild(style);
            """)
        window.events.loaded += on_loaded
        
        webview.start()

    except Exception as e:
        logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í RUN.PY: {e}", exc_info=True)
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    finally:
        logger.info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.")
        sys.exit(0)